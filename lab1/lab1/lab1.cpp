//Простые структуры данных

#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <stdlib.h>
#include <locale.h>
#include <time.h>

//объявление переменных
int n, m;				//количество строк, столбцов в массиве
int* pmas;				//указатель на массив
int i, j;				//переменные для организации циклов
int sum_c[1][10];		//переменная для подсчета суммы столбцов в массиве
int sum_r[10][1];		//переменная для подсчета суммы строк в массиве
int max, min;			//переменные для поиска максимального и минимального значений в массиве
int k;					//временная переменная


void main() {
	srand(time(NULL));		//функция генерации уникальных значений при каждом запуске программы

	setlocale(0, "rus");		//подключение русского языка
	printf("Введите количество строк в массиве -> ");	//вывод информационного сообщения для пользователя
	scanf("%d", &n);									//считывание количества строк из консоли
	printf("Введите количество столбцов в массиве -> "); //вывод информационного сообщения для пользователя
	scanf("%d", &m);									//считывание количества столбцов из консоли
	printf("\n");


	pmas = (int*)malloc(n * m * sizeof(int));			//динамическое выделение памяти, равной размеру массива. 
											//размер массива = количество строк * количество столбцов * размер типа данных одного элемента массива
	//инициализацию массива произвольного размера случайными числами
	for (i = 0; i < n; i++) {					//проход по строкам	
		for (j = 0; j < m; j++) {				//проход по столбцам
			pmas[i * m + j] = rand() % 100 - 20;			//запись случайного значения [-20; 79] в элемент[i][j] массива
			printf("%5d ", pmas[i * m + j]);			//вывод элемента с использованием форматированного вывода

		}
		printf("\n");
	}
	printf("\n");


	min = pmas[m];						//запись в пермеенную min одного из элементов массива 					max = pmas[m];						//запись в пермеенную max одного из элементов массива 										

	for (i = 0; i < n; i++) {
		for (j = 0; j < m; j++) {
			if (pmas[i * m + j] > max) {			//сравнение элемента массива с max
				max = pmas[i * m + j];			//запись в переменную max большего значения
			}

			if (pmas[i * m + j] < min) {			//сравнение элемента массива с min
				min = pmas[i * m + j];			//запись в переменную min меньшего значения
			}
		}
	}

	printf("Минимальный элемент массива = %d\n", min);	//вывод минимального значения	
	printf("Максимальный элемент массива = %d\n", max);	//вывод максимального значения
	printf("max - min = %d\n\n", max - min);			//вывод разницы между максимальным и минимальным значениями



	//вычисление суммы значений в каждой строке
	for (i = 0; i < n; i++) {
		for (j = 0; j < m; j++) {
			sum_r[k][0] += pmas[i * m + j];			//прибавление к k-ому элементу массива sum_r элемнетов строки
		}
		k++;
	}

	printf("Сумма строк:\n");
	for (k = 0; k < n; k++) {
		printf("%5d\n", sum_r[k][0]);				//форматированный вывод столбца с суммами строк 
	}
	printf("\n");


	k = 0;									//вычисление суммы значений в каждом столбце
	for (j = 0; j < m; j++) {
		for (i = 0; i < n; i++) {
			sum_c[0][k] += pmas[i * m + j];			//прибавление к k-ому элементу массива sum_c элемнетов столбца
		}
		k++;
	}

	printf("Сумма столбцов:\n");
	for (k = 0; k < m; k++) {
		printf("%5d ", sum_c[0][k]);				//форматированный вывод строки с суммами строк			
	}
	printf("\n");

	free(pmas);								//освобождение памяти, динамически выделенной при помощи функции malloc
}

