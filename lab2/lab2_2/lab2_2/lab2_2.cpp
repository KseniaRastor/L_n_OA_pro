#include <stdio.h>
#include <stdlib.h>
#include <time.h>

int main(void)
{
	//setvbuf(stdin, NULL, _IONBF, 0);
	//setvbuf(stdout, NULL, _IONBF, 0);

	int i = 0, j = 0, r, elem_c;	//i, j, r - организация циклов, elem_c - подсчет произведения
	int n = 1000;	//количество элементов в массиве
	int** a;	//указатель на двумерный массив а
	int** b;	//указатель на двумерный массив b
	int** c;	//указатель на двумерный массив c

	while (n <= 10000) {				//организация цикла до 10000 элементов в массивах
		printf(" % d -> ", n);
		a = (int**)malloc(n * sizeof(int*));		//выделение памяти для массива а (одномерный массив)
													
		for (i = 0; i < n; i++){					//выделения памяти для каждой ячейки одномерного массива		
			a[i] = (int*)malloc(n * sizeof(int));	//для создания двумерного массива
		}

		b = (int**)malloc(n * sizeof(int*));		//выделение памяти для массива b (аналогично массиву а)

		for (i = 0; i < n; i++) {
			b[i] = (int*)malloc(n * sizeof(int));
		}

		c = (int**)malloc(n * sizeof(int*));		//выделение памяти для массива c (аналогично массиву а)

		for (i = 0; i < n; i++){
			c[i] = (int*)malloc(n * sizeof(int));
		}

		srand(time(NULL)); // инициализируем параметры генератора случайных чисел
		while (i < n)
		{
			while (j < n)
			{
				a[i][j] = rand() % 100 + 1; // заполняем массив а случайными числами
				j++;
			}
			i++;
		}
		srand(time(NULL)); // инициализируем параметры генератора случайных чисел
		i = 0; j = 0;
		while (i < n)
		{
			while (j < n)
			{
				b[i][j] = rand() % 100 + 1; // заполняем массив b случайными числами
				j++;
			}
			i++;
		}

		clock_t start = clock();		//начало отсчета времени вычисления
		//умножение матрицы а (массива а) на матрицу b (массива b), произведение матриц - матрица с (массив с) 
		for (i = 0; i < n; i++)			//проход по всем элементам массива с
		{
			for (j = 0; j < n; j++)		
			{
				elem_c = 0;				//обнуление переменной для подсчета результата
				for (r = 0; r < n; r++)	//столбцы массива а, строки массива b
				{
					elem_c = elem_c + a[i][r] * b[r][j];	//запись суммы произведения массивов a и b в elem_c
					c[i][j] = elem_c;						//запись результата в ячейку массива с
				}
			}
		}
		clock_t end = clock();			//завершение отсчета времени вычисления

		printf("%f\n", (double)(end - start) / CLOCKS_PER_SEC); //вычисление и вывод  времени вычисления

		n = n + 1000;				//увеличение n для следующего цикла

	}
	return(0);
}
